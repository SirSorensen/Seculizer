// Vitest Snapshot v1

exports[`should parse Authenticated-Diffie-hellman.sepo 1`] = `
{
  "equations": {
    "equations": [
      {
        "left": {
          "id": "exp",
          "params": [
            {
              "id": "exp",
              "params": [
                {
                  "type": "id",
                  "value": "g",
                },
                {
                  "type": "id",
                  "value": "Y",
                },
              ],
              "type": "function",
            },
            {
              "type": "id",
              "value": "X",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "exp",
          "params": [
            {
              "id": "exp",
              "params": [
                {
                  "type": "id",
                  "value": "g",
                },
                {
                  "type": "id",
                  "value": "X",
                },
              ],
              "type": "function",
            },
            {
              "type": "id",
              "value": "Y",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
    ],
    "type": "equations",
  },
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$x^y$",
        },
        "id": {
          "id": "exp",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": undefined,
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Bob" => "man",
      "X" => "input-numbers",
      "Y" => "input-numbers",
      "exp" => "🔑",
      "g" => "gear",
      "msgA" => "📝",
      "msgB" => "📝",
      "AliceCert" => "identification-card",
      "BobCert" => "identification-card",
    },
    "type": "icons",
  },
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is a nonce",
              },
            },
            "value": {
              "type": "id",
              "value": "X",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Alice's message",
              },
            },
            "value": {
              "type": "id",
              "value": "msgA",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is a nonce",
              },
            },
            "value": {
              "type": "id",
              "value": "Y",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Bob's message",
              },
            },
            "value": {
              "type": "id",
              "value": "msgB",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is a generator",
              },
            },
            "value": {
              "type": "id",
              "value": "g",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Alice's Certificate",
              },
            },
            "value": {
              "type": "id",
              "value": "AliceCert",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Bob's Certificate",
              },
            },
            "value": {
              "type": "id",
              "value": "BobCert",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Shared",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "id": "exp",
                        "params": [
                          {
                            "type": "id",
                            "value": "g",
                          },
                          {
                            "type": "id",
                            "value": "X",
                          },
                        ],
                        "type": "function",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "AliceCert",
                  },
                  "type": "signExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends Bob her public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "id": "exp",
                        "params": [
                          {
                            "type": "id",
                            "value": "g",
                          },
                          {
                            "type": "id",
                            "value": "Y",
                          },
                        ],
                        "type": "function",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "BobCert",
                  },
                  "type": "signExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends Alice his public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msgA",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "id": "exp",
                    "params": [
                      {
                        "id": "exp",
                        "params": [
                          {
                            "type": "id",
                            "value": "g",
                          },
                          {
                            "type": "id",
                            "value": "Y",
                          },
                        ],
                        "type": "function",
                      },
                      {
                        "type": "id",
                        "value": "X",
                      },
                    ],
                    "type": "function",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends Bob a message encrypted with Bob's public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msgB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "id": "exp",
                    "params": [
                      {
                        "id": "exp",
                        "params": [
                          {
                            "type": "id",
                            "value": "g",
                          },
                          {
                            "type": "id",
                            "value": "X",
                          },
                        ],
                        "type": "function",
                      },
                      {
                        "type": "id",
                        "value": "Y",
                      },
                    ],
                    "type": "function",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends Alice a message encrypted with Alice's public key",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse Clear.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": undefined,
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "key",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "key",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "id": {
            "type": "id",
            "value": "key",
          },
          "type": "clearStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse Diffie-hellman.sepo 1`] = `
{
  "equations": {
    "equations": [
      {
        "left": {
          "id": "exp",
          "params": [
            {
              "id": "exp",
              "params": [
                {
                  "type": "id",
                  "value": "g",
                },
                {
                  "type": "id",
                  "value": "Y",
                },
              ],
              "type": "function",
            },
            {
              "type": "id",
              "value": "X",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "exp",
          "params": [
            {
              "id": "exp",
              "params": [
                {
                  "type": "id",
                  "value": "g",
                },
                {
                  "type": "id",
                  "value": "X",
                },
              ],
              "type": "function",
            },
            {
              "type": "id",
              "value": "Y",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
    ],
    "type": "equations",
  },
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$x^y$",
        },
        "id": {
          "id": "exp",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": undefined,
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Bob" => "man",
      "X" => "input-numbers",
      "Y" => "input-numbers",
      "exp" => "🔑",
      "g" => "gear",
      "msgA" => "📝",
      "msgB" => "📝",
    },
    "type": "icons",
  },
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is an nonce",
              },
            },
            "value": {
              "type": "id",
              "value": "X",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Alice's message",
              },
            },
            "value": {
              "type": "id",
              "value": "msgA",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is a nonce",
              },
            },
            "value": {
              "type": "id",
              "value": "Y",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Bob's message",
              },
            },
            "value": {
              "type": "id",
              "value": "msgB",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is a generator",
              },
            },
            "value": {
              "type": "id",
              "value": "g",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Shared",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "id": "exp",
                  "params": [
                    {
                      "type": "id",
                      "value": "g",
                    },
                    {
                      "type": "id",
                      "value": "X",
                    },
                  ],
                  "type": "function",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends Bob her public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "id": "exp",
                  "params": [
                    {
                      "type": "id",
                      "value": "g",
                    },
                    {
                      "type": "id",
                      "value": "Y",
                    },
                  ],
                  "type": "function",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends Alice his public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msgA",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "id": "exp",
                    "params": [
                      {
                        "id": "exp",
                        "params": [
                          {
                            "type": "id",
                            "value": "g",
                          },
                          {
                            "type": "id",
                            "value": "Y",
                          },
                        ],
                        "type": "function",
                      },
                      {
                        "type": "id",
                        "value": "X",
                      },
                    ],
                    "type": "function",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends Bob a message encrypted with Bob and Alice's shared secret key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msgB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "id": "exp",
                    "params": [
                      {
                        "id": "exp",
                        "params": [
                          {
                            "type": "id",
                            "value": "g",
                          },
                          {
                            "type": "id",
                            "value": "X",
                          },
                        ],
                        "type": "function",
                      },
                      {
                        "type": "id",
                        "value": "Y",
                      },
                    ],
                    "type": "function",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends Alice a message encrypted with Bob and Alice's shared secret key",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse El-Gamal simple.sepo 1`] = `
{
  "equations": undefined,
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$x^{y}$",
        },
        "id": {
          "id": "exp",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$(x) \\\\text{ mod } y$",
        },
        "id": {
          "id": "mod",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$sk_{Alice}$",
        },
        "id": {
          "type": "id",
          "value": "alice_sk",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$pk_{Alice}$",
        },
        "id": {
          "type": "id",
          "value": "alice_pk",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": undefined,
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Bob" => "man",
      "g" => "input-numbers",
      "p" => "input-numbers",
      "exp" => "input-numbers",
      "r" => "input-numbers",
      "alice_sk" => "key",
      "alice_pk" => "key",
      "msgB" => "📝",
    },
    "type": "icons",
  },
  "keyRelations": {
    "keyRelations": [
      {
        "pk": {
          "type": "id",
          "value": "alice_pk",
        },
        "sk": {
          "type": "id",
          "value": "alice_sk",
        },
        "type": "keyRelation",
      },
    ],
    "type": "keyRelations",
  },
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Bob's message",
              },
            },
            "value": {
              "type": "id",
              "value": "msgB",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Alice's secret key. It is a random number less than p, and gcd(sk,p) = 1",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "alice_sk",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice constructs her private key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Alice's public key",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "alice_pk",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice constructs her public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "alice_pk",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends Bob her public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msgB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "alice_pk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends Alice his ciphertext",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse El-Gamal.sepo 1`] = `
{
  "equations": {
    "equations": [
      {
        "left": {
          "id": "mod",
          "params": [
            {
              "id": "exp",
              "params": [
                {
                  "id": "mod",
                  "params": [
                    {
                      "type": "id",
                      "value": "a",
                    },
                    {
                      "type": "id",
                      "value": "b",
                    },
                  ],
                  "type": "function",
                },
                {
                  "type": "id",
                  "value": "c",
                },
              ],
              "type": "function",
            },
            {
              "type": "id",
              "value": "b",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "mod",
          "params": [
            {
              "id": "exp",
              "params": [
                {
                  "type": "id",
                  "value": "a",
                },
                {
                  "type": "id",
                  "value": "c",
                },
              ],
              "type": "function",
            },
            {
              "type": "id",
              "value": "b",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
      {
        "left": {
          "id": "exp",
          "params": [
            {
              "id": "exp",
              "params": [
                {
                  "type": "id",
                  "value": "a",
                },
                {
                  "type": "id",
                  "value": "b",
                },
              ],
              "type": "function",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "exp",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "id": "prod",
              "params": [
                {
                  "type": "id",
                  "value": "b",
                },
                {
                  "type": "id",
                  "value": "c",
                },
              ],
              "type": "function",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
    ],
    "type": "equations",
  },
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$x^{y}$",
        },
        "id": {
          "id": "exp",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$(x) \\\\text{ mod } y$",
        },
        "id": {
          "id": "mod",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$sk_{Alice}$",
        },
        "id": {
          "type": "id",
          "value": "alice_sk",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": undefined,
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Bob" => "man",
      "g" => "input-numbers",
      "p" => "input-numbers",
      "exp" => "input-numbers",
      "r" => "input-numbers",
      "alice_sk" => "key",
      "msgB" => "📝",
    },
    "type": "icons",
  },
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Bob's message",
              },
            },
            "value": {
              "type": "id",
              "value": "msgB",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is a generator",
              },
            },
            "value": {
              "type": "id",
              "value": "g",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is a prime number",
              },
            },
            "value": {
              "type": "id",
              "value": "p",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Shared",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "This is Alice's secret key. It is a random number less than p, and gcd(sk,p) = 1",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "alice_sk",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "id": "mod",
                  "params": [
                    {
                      "id": "exp",
                      "params": [
                        {
                          "type": "id",
                          "value": "g",
                        },
                        {
                          "type": "id",
                          "value": "alice_sk",
                        },
                      ],
                      "type": "function",
                    },
                    {
                      "type": "id",
                      "value": "p",
                    },
                  ],
                  "type": "function",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends Bob her public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": undefined,
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "r",
            },
          },
          "id": {
            "type": "id",
            "value": "Bob",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "This is nonce (a random number between 0 and p)",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "id": "mod",
                  "params": [
                    {
                      "id": "exp",
                      "params": [
                        {
                          "type": "id",
                          "value": "g",
                        },
                        {
                          "type": "id",
                          "value": "r",
                        },
                      ],
                      "type": "function",
                    },
                    {
                      "type": "id",
                      "value": "p",
                    },
                  ],
                  "type": "function",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends Alice his first ciphertext component",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msgB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "id": "mod",
                    "params": [
                      {
                        "id": "exp",
                        "params": [
                          {
                            "id": "mod",
                            "params": [
                              {
                                "id": "exp",
                                "params": [
                                  {
                                    "type": "id",
                                    "value": "g",
                                  },
                                  {
                                    "type": "id",
                                    "value": "alice_sk",
                                  },
                                ],
                                "type": "function",
                              },
                              {
                                "type": "id",
                                "value": "p",
                              },
                            ],
                            "type": "function",
                          },
                          {
                            "type": "id",
                            "value": "r",
                          },
                        ],
                        "type": "function",
                      },
                      {
                        "type": "id",
                        "value": "p",
                      },
                    ],
                    "type": "function",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends Alice his second ciphertext component",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse Envelope.sepo 1`] = `
{
  "equations": undefined,
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$Hash(x||y)$",
        },
        "id": {
          "id": "hash",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$tpm_{sk}$",
        },
        "id": {
          "type": "id",
          "value": "tpm_sk",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$tpm_{pk}$",
        },
        "id": {
          "type": "id",
          "value": "tpm_pk",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": {
    "functions": [
      {
        "type": "id",
        "value": "hash",
      },
    ],
    "type": "functionsDef",
  },
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Parent" => "family",
      "tpm_pk" => "🔑",
      "tpm_sk" => "🔑",
      "k" => "🔑",
      "esk" => "🔑",
      "pcr" => "📝",
      "v" => "📝",
      "sid" => "input-numbers",
      "n" => "input-numbers",
      "TPM" => "save",
    },
    "type": "icons",
  },
  "keyRelations": {
    "keyRelations": [
      {
        "pk": {
          "type": "id",
          "value": "tpm_pk",
        },
        "sk": {
          "type": "id",
          "value": "tpm_sk",
        },
        "type": "keyRelation",
      },
    ],
    "type": "keyRelations",
  },
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "The TPM's private key",
              },
            },
            "value": {
              "type": "id",
              "value": "tpm_sk",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Platform Configuration Register",
              },
            },
            "value": {
              "type": "id",
              "value": "pcr",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "TPM",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "The TPM's public key",
              },
            },
            "value": {
              "type": "id",
              "value": "tpm_pk",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Shared",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Parent",
        },
        "type": "participantItem",
      },
      {
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Trusted Platform Module, a secure cryptoprocessor",
          },
        },
        "id": {
          "type": "id",
          "value": "TPM",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Boot\\"",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "TPM",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice boots the TPM",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "id": {
              "type": "id",
              "value": "pcr",
            },
            "type": "setStatement",
            "value": {
              "type": "number",
              "value": 1,
            },
          },
          "id": {
            "type": "id",
            "value": "TPM",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM initilize PCR to 1",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Booted\\"",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "TPM",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Nonce",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "n",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "A new nonce is generated",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Alice session key",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "esk",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "A new session key is generated",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Session\\"",
                },
                "type": "expression",
              },
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "esk",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "tpm_pk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "TPM",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends the TPM a session key encrypted with the TPM's public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Alice's Session ID",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "sid",
            },
          },
          "id": {
            "type": "id",
            "value": "TPM",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM generates a new session id",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "sid",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "TPM",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM sends the session id to Alice",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "string",
                        "value": "\\"Extend\\"",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "type": "id",
                        "value": "n",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "type": "id",
                        "value": "sid",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "esk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "TPM",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice extends the PCR with the nonce and the session id",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "id": {
              "type": "id",
              "value": "pcr",
            },
            "type": "setStatement",
            "value": {
              "id": "hash",
              "params": [
                {
                  "type": "id",
                  "value": "n",
                },
                {
                  "type": "id",
                  "value": "pcr",
                },
              ],
              "type": "function",
            },
          },
          "id": {
            "type": "id",
            "value": "TPM",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM extends the PCR",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Extended\\"",
                },
                "type": "expression",
              },
              {
                "child": {
                  "type": "id",
                  "value": "pcr",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "TPM",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM sends the new PCR to Alice",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Create\\"",
                },
                "type": "expression",
              },
              {
                "child": {
                  "id": "hash",
                  "params": [
                    {
                      "type": "string",
                      "value": "\\"obt\\"",
                    },
                    {
                      "type": "id",
                      "value": "pcr",
                    },
                  ],
                  "type": "function",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "TPM",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice requests the TPM to create a new key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": undefined,
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "k",
            },
          },
          "id": {
            "type": "id",
            "value": "TPM",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM generates a new key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "string",
                        "value": "\\"Created\\"",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "type": "id",
                        "value": "k",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "id": "hash",
                        "params": [
                          {
                            "type": "string",
                            "value": "\\"obt\\"",
                          },
                          {
                            "type": "id",
                            "value": "pcr",
                          },
                        ],
                        "type": "function",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "tpm_sk",
                  },
                  "type": "signExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "TPM",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM sends the key and the PCR to Alice, signed with the TPM's secret key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "id": {
            "type": "id",
            "value": "sid",
          },
          "type": "clearStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The session key and the session id are cleared",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Arbitrary value",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "v",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice creates an arbitrary value",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Envelope\\"",
                },
                "type": "expression",
              },
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "v",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "k",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Parent",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends the arbitrary value encrypted with the new key to the parent",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Parent session key",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "esk",
            },
          },
          "id": {
            "type": "id",
            "value": "Parent",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The parent generates a new session key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Session\\"",
                },
                "type": "expression",
              },
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "esk",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "tpm_pk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Parent",
          },
          "rightId": {
            "type": "id",
            "value": "TPM",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The parent sends the TPM a session key encrypted with the TPM's public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Parent's Session ID",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "sid",
            },
          },
          "id": {
            "type": "id",
            "value": "TPM",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM generates a new session id",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "sid",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "TPM",
          },
          "rightId": {
            "type": "id",
            "value": "Parent",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The TPM sends the session id to the parent",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "cases": [
              {
                "case": {
                  "type": "string",
                  "value": "\\"Refuse\\"",
                },
                "children": [
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "inner": [
                                {
                                  "child": {
                                    "type": "string",
                                    "value": "\\"Extend\\"",
                                  },
                                  "type": "expression",
                                },
                                {
                                  "child": {
                                    "type": "string",
                                    "value": "\\"ref\\"",
                                  },
                                  "type": "expression",
                                },
                                {
                                  "child": {
                                    "type": "id",
                                    "value": "sid",
                                  },
                                  "type": "expression",
                                },
                              ],
                              "outer": {
                                "type": "id",
                                "value": "esk",
                              },
                              "type": "encryptExpression",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The parent requests the TPM to extend the PCR with the refusal value and the session id",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "id": {
                          "type": "id",
                          "value": "pcr",
                        },
                        "type": "setStatement",
                        "value": {
                          "id": "hash",
                          "params": [
                            {
                              "type": "string",
                              "value": "\\"ref\\"",
                            },
                            {
                              "type": "id",
                              "value": "pcr",
                            },
                          ],
                          "type": "function",
                        },
                      },
                      "id": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "type": "participantStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The TPM extends the PCR",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "type": "string",
                              "value": "\\"Extended\\"",
                            },
                            "type": "expression",
                          },
                          {
                            "child": {
                              "type": "id",
                              "value": "pcr",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The TPM sends the new PCR to the parent",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "type": "string",
                              "value": "\\"Quote\\"",
                            },
                            "type": "expression",
                          },
                          {
                            "child": {
                              "inner": [
                                {
                                  "child": {
                                    "type": "id",
                                    "value": "v",
                                  },
                                  "type": "expression",
                                },
                              ],
                              "outer": {
                                "type": "id",
                                "value": "k",
                              },
                              "type": "encryptExpression",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The parent requests the TPM to quote the PCR",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "inner": [
                                {
                                  "child": {
                                    "type": "string",
                                    "value": "\\"Quoted\\"",
                                  },
                                  "type": "expression",
                                },
                                {
                                  "child": {
                                    "type": "id",
                                    "value": "pcr",
                                  },
                                  "type": "expression",
                                },
                                {
                                  "child": {
                                    "inner": [
                                      {
                                        "child": {
                                          "type": "id",
                                          "value": "v",
                                        },
                                        "type": "expression",
                                      },
                                    ],
                                    "outer": {
                                      "type": "id",
                                      "value": "k",
                                    },
                                    "type": "encryptExpression",
                                  },
                                  "type": "expression",
                                },
                              ],
                              "outer": {
                                "type": "id",
                                "value": "tpm_sk",
                              },
                              "type": "signExpression",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The TPM sends the PCR and the arbitrary value encrypted with the new key to the parent. The entire message is signed with the TPM's secret key",
                      },
                    },
                    "type": "statement",
                  },
                ],
                "type": "matchCase",
              },
              {
                "case": {
                  "type": "string",
                  "value": "\\"Obtain\\"",
                },
                "children": [
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "inner": [
                                {
                                  "child": {
                                    "type": "string",
                                    "value": "\\"Extend\\"",
                                  },
                                  "type": "expression",
                                },
                                {
                                  "child": {
                                    "type": "string",
                                    "value": "\\"obt\\"",
                                  },
                                  "type": "expression",
                                },
                                {
                                  "child": {
                                    "type": "id",
                                    "value": "sid",
                                  },
                                  "type": "expression",
                                },
                              ],
                              "outer": {
                                "type": "id",
                                "value": "esk",
                              },
                              "type": "encryptExpression",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The parent requests the TPM to extend the PCR with the arbitrary value and the session id",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "id": {
                          "type": "id",
                          "value": "pcr",
                        },
                        "type": "setStatement",
                        "value": {
                          "id": "hash",
                          "params": [
                            {
                              "type": "string",
                              "value": "\\"obt\\"",
                            },
                            {
                              "type": "id",
                              "value": "pcr",
                            },
                          ],
                          "type": "function",
                        },
                      },
                      "id": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "type": "participantStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The TPM extends the PCR",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "type": "string",
                              "value": "\\"Extended\\"",
                            },
                            "type": "expression",
                          },
                          {
                            "child": {
                              "type": "id",
                              "value": "pcr",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The TPM sends the new PCR to the parent",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "type": "string",
                              "value": "\\"Decrypt\\"",
                            },
                            "type": "expression",
                          },
                          {
                            "child": {
                              "inner": [
                                {
                                  "child": {
                                    "type": "id",
                                    "value": "v",
                                  },
                                  "type": "expression",
                                },
                              ],
                              "outer": {
                                "type": "id",
                                "value": "k",
                              },
                              "type": "encryptExpression",
                            },
                            "type": "expression",
                          },
                          {
                            "child": {
                              "type": "id",
                              "value": "pcr",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The parent requests the TPM to decrypt the arbitrary value",
                      },
                    },
                    "type": "statement",
                  },
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "type": "id",
                              "value": "v",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "TPM",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "Parent",
                      },
                      "type": "sendStatement",
                    },
                    "comment": {
                      "type": "stmtComment",
                      "value": {
                        "type": "string",
                        "value": "The TPM sends the arbitrary value to the parent",
                      },
                    },
                    "type": "statement",
                  },
                ],
                "type": "matchCase",
              },
            ],
            "type": "matchStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Parent",
          },
          "rightId": {
            "type": "id",
            "value": "TPM",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "The parent now has a choice to either refuse or obtain the arbitrary value",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse Needham-Schroeder-Public-Key.sepo 1`] = `
{
  "equations": undefined,
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$Alice_{pk}$",
        },
        "id": {
          "type": "id",
          "value": "kPA",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Alice_{sk}$",
        },
        "id": {
          "type": "id",
          "value": "kSA",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Bob_{pk}$",
        },
        "id": {
          "type": "id",
          "value": "kPB",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Bob_{sk}$",
        },
        "id": {
          "type": "id",
          "value": "kSB",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Server_{sk}$",
        },
        "id": {
          "type": "id",
          "value": "kPS",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$N_{Alice}$",
        },
        "id": {
          "type": "id",
          "value": "NA",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$N_{Bob}$",
        },
        "id": {
          "type": "id",
          "value": "NB",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": undefined,
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Bob" => "man",
      "Server" => "save",
      "kPA" => "🔑",
      "kPB" => "🔑",
      "kSA" => "🔑",
      "kSB" => "🔑",
      "kPS" => "🔑",
      "NA" => "input-numbers",
      "NB" => "input-numbers",
    },
    "type": "icons",
  },
  "keyRelations": {
    "keyRelations": [
      {
        "pk": {
          "type": "id",
          "value": "kPA",
        },
        "sk": {
          "type": "id",
          "value": "kSA",
        },
        "type": "keyRelation",
      },
      {
        "pk": {
          "type": "id",
          "value": "kPB",
        },
        "sk": {
          "type": "id",
          "value": "kSB",
        },
        "type": "keyRelation",
      },
    ],
    "type": "keyRelations",
  },
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "kPA",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "kSA",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "kPB",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "kSB",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "kPA",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "kPB",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "kPS",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Server",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Server",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Alice\\"",
                },
                "type": "expression",
              },
              {
                "child": {
                  "type": "string",
                  "value": "\\"Bob\\"",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice requests Bob's public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "kPB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "kPS",
                  },
                  "type": "signExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Server",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server sends Bob's public key signed by the server",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": undefined,
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "NA",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice chooses a random nonce and sends it to Bob",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "NA",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "kPB",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice chooses a random nonce and sends it to Bob",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Bob\\"",
                },
                "type": "expression",
              },
              {
                "child": {
                  "type": "string",
                  "value": "\\"Alice\\"",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob requests Alice's public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "kPA",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "kPS",
                  },
                  "type": "signExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Server",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server sends Alice's public key signed by the server",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": undefined,
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "NB",
            },
          },
          "id": {
            "type": "id",
            "value": "Bob",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob chooses a random nonce",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "NA",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "type": "id",
                        "value": "NB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "kPA",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends to Alice the newly created nonce along with Alice's nonce to prove decryption",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "NB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "kPB",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice confirms Bob's nonce to prove decryption",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse Needham-Schroeder-Shared-Key.sepo 1`] = `
{
  "equations": undefined,
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$K_{A,s}$",
        },
        "id": {
          "type": "id",
          "value": "kas",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$K_{B,s}$",
        },
        "id": {
          "type": "id",
          "value": "kbs",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$K_{A,B}$",
        },
        "id": {
          "type": "id",
          "value": "Kab",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$N_{A}$",
        },
        "id": {
          "type": "id",
          "value": "NA",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$N_{B}$",
        },
        "id": {
          "type": "id",
          "value": "NB",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$N_{B} - 1$",
        },
        "id": {
          "id": "subtract",
          "params": [
            {
              "type": "id",
              "value": "NB",
            },
            {
              "type": "number",
              "value": 1,
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": undefined,
  "icons": {
    "icons": Map {
      "A" => "woman",
      "B" => "man",
      "s" => "save",
      "kas" => "🔑",
      "kbs" => "🔑",
      "Kab" => "🔑",
      "NA" => "input-numbers",
      "NB" => "input-numbers",
    },
    "type": "icons",
  },
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Shared key between Alice and Server",
              },
            },
            "value": {
              "type": "id",
              "value": "kas",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "A",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Shared key between Bob and Server",
              },
            },
            "value": {
              "type": "id",
              "value": "kbs",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "B",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Shared key between Alice and Server",
              },
            },
            "value": {
              "type": "id",
              "value": "kas",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Shared key between Bob and Server",
              },
            },
            "value": {
              "type": "id",
              "value": "kbs",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "s",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice",
          },
        },
        "id": {
          "type": "id",
          "value": "A",
        },
        "type": "participantItem",
      },
      {
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob",
          },
        },
        "id": {
          "type": "id",
          "value": "B",
        },
        "type": "participantItem",
      },
      {
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server",
          },
        },
        "id": {
          "type": "id",
          "value": "s",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Alice nonce",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "NA",
            },
          },
          "id": {
            "type": "id",
            "value": "A",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice creates a nonce",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "A",
                },
                "type": "expression",
              },
              {
                "child": {
                  "type": "id",
                  "value": "B",
                },
                "type": "expression",
              },
              {
                "child": {
                  "type": "id",
                  "value": "NA",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "A",
          },
          "rightId": {
            "type": "id",
            "value": "s",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends her, Bob, and the nonce to the server",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Shared key between Alice and Bob",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "Kab",
            },
          },
          "id": {
            "type": "id",
            "value": "s",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server creates a shared key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "Kab",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "type": "id",
                        "value": "B",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "type": "id",
                        "value": "NA",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "inner": [
                          {
                            "child": {
                              "type": "id",
                              "value": "Kab",
                            },
                            "type": "expression",
                          },
                          {
                            "child": {
                              "type": "id",
                              "value": "A",
                            },
                            "type": "expression",
                          },
                        ],
                        "outer": {
                          "type": "id",
                          "value": "kbs",
                        },
                        "type": "encryptExpression",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "kas",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "s",
          },
          "rightId": {
            "type": "id",
            "value": "A",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server sends Bob, the nonce, and the shared key encrypted with the shared key to Alice",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "Kab",
                      },
                      "type": "expression",
                    },
                    {
                      "child": {
                        "type": "id",
                        "value": "A",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "kbs",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "A",
          },
          "rightId": {
            "type": "id",
            "value": "B",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice sends the shared key encrypted with the shared key to Bob",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Bob nonce",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "NB",
            },
          },
          "id": {
            "type": "id",
            "value": "B",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob creates a nonce",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "NB",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "Kab",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "B",
          },
          "rightId": {
            "type": "id",
            "value": "A",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Bob sends the nonce encrypted with the shared key to Alice",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "id": "subtract",
                        "params": [
                          {
                            "type": "id",
                            "value": "NB",
                          },
                          {
                            "type": "number",
                            "value": 1,
                          },
                        ],
                        "type": "function",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "Kab",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "A",
          },
          "rightId": {
            "type": "id",
            "value": "B",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Alice performs a simple operation on the nonce, re-encrypts it and sends it back verifying that she is still alive and that she holds the key.",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse TLS-1_3.sepo 1`] = `
{
  "equations": {
    "equations": [
      {
        "left": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
      {
        "left": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "c",
            },
            {
              "type": "id",
              "value": "b",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
      {
        "left": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "c",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "a",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
      {
        "left": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
            {
              "type": "id",
              "value": "a",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
      {
        "left": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "c",
            },
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
      {
        "left": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "c",
            },
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
    ],
    "type": "equations",
  },
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$Hash(x||y||z)$",
        },
        "id": {
          "id": "hash",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
            {
              "type": "id",
              "value": "z",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "\${a + b}$",
        },
        "id": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "\${a + b + c}$",
        },
        "id": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "c",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Client_{SP}$",
        },
        "id": {
          "type": "id",
          "value": "cSP",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Server_{SP}$",
        },
        "id": {
          "type": "id",
          "value": "sSP",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Client_{sk}$",
        },
        "id": {
          "type": "id",
          "value": "clientSk",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Server_{sk}$",
        },
        "id": {
          "type": "id",
          "value": "serverSk",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Server_{pk}$",
        },
        "id": {
          "type": "id",
          "value": "serverPk",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Client_{pk}$",
        },
        "id": {
          "type": "id",
          "value": "clientPk",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Server_{cert}$",
        },
        "id": {
          "type": "id",
          "value": "serverCert",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Client_{cert}$",
        },
        "id": {
          "type": "id",
          "value": "clientCert",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Client_{RB}$",
        },
        "id": {
          "type": "id",
          "value": "cRB",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$Server_{RB}$",
        },
        "id": {
          "type": "id",
          "value": "sRB",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "string",
          "value": "Pre-Master Key",
        },
        "id": {
          "type": "id",
          "value": "pmk",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "string",
          "value": "Master Key",
        },
        "id": {
          "type": "id",
          "value": "mk",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": {
    "functions": [
      {
        "type": "id",
        "value": "hash",
      },
    ],
    "type": "functionsDef",
  },
  "icons": {
    "icons": Map {
      "Client" => "laptop",
      "serverSk" => "🔑",
      "serverPk" => "🔑",
      "clientPk" => "🔑",
      "clientSk" => "🔑",
      "pmk" => "🔑",
      "mk" => "🔑",
      "cSP" => "📝",
      "sSP" => "📝",
      "cRB" => "📝",
      "sRB" => "📝",
      "Server" => "home-button",
      "serverCert" => "identification-card",
      "clientCert" => "identification-card",
    },
    "type": "icons",
  },
  "keyRelations": {
    "keyRelations": [
      {
        "pk": {
          "type": "id",
          "value": "serverPk",
        },
        "sk": {
          "type": "id",
          "value": "serverSk",
        },
        "type": "keyRelation",
      },
      {
        "pk": {
          "type": "id",
          "value": "clientPk",
        },
        "sk": {
          "type": "id",
          "value": "clientSk",
        },
        "type": "keyRelation",
      },
    ],
    "type": "keyRelations",
  },
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Client Security Parameters",
              },
            },
            "value": {
              "type": "id",
              "value": "cSP",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Client private key",
              },
            },
            "value": {
              "type": "id",
              "value": "clientSk",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Client public key",
              },
            },
            "value": {
              "type": "id",
              "value": "clientPk",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Client",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Server Security Parameters",
              },
            },
            "value": {
              "type": "id",
              "value": "sSP",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Server private key",
              },
            },
            "value": {
              "type": "id",
              "value": "serverSk",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Server public key",
              },
            },
            "value": {
              "type": "id",
              "value": "serverPk",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Server",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Server certificate",
              },
            },
            "value": {
              "type": "id",
              "value": "serverCert",
            },
          },
          {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Client certificate",
              },
            },
            "value": {
              "type": "id",
              "value": "clientCert",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Shared",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Client",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Server",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Client Random Bytes",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "cRB",
            },
          },
          "id": {
            "type": "id",
            "value": "Client",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client creates random bytes",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Client Hello\\"",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Client",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "cRB",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Client",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client sends random bytes to server",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "cSP",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Client",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client sends security parameters to server",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "string",
                  "value": "\\"Server Hello\\"",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Server",
          },
          "rightId": {
            "type": "id",
            "value": "Client",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Server Random Bytes",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "sRB",
            },
          },
          "id": {
            "type": "id",
            "value": "Server",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server creates random bytes",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "sSP",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Server",
          },
          "rightId": {
            "type": "id",
            "value": "Client",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server sends security parameters to client",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "serverPk",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "serverCert",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Server",
          },
          "rightId": {
            "type": "id",
            "value": "Client",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server sends public key verified by server certificate",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Pre-master-key",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "pmk",
            },
          },
          "id": {
            "type": "id",
            "value": "Client",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client creates the pre-master-key by concating the security parameters",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "id": {
              "type": "id",
              "value": "pmk",
            },
            "type": "setStatement",
            "value": {
              "id": "add",
              "params": [
                {
                  "type": "id",
                  "value": "cSP",
                },
                {
                  "type": "id",
                  "value": "sSP",
                },
              ],
              "type": "function",
            },
          },
          "id": {
            "type": "id",
            "value": "Client",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client creates the pre-master-key by concating the security parameters",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "clientPk",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "clientCert",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Client",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client sends public key verified by client certificate",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "pmk",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "serverPk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Client",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client sends pre-master-key encrypted by server public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Master-key",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "mk",
            },
          },
          "id": {
            "type": "id",
            "value": "Client",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client creates the master-key by concating the pre-master-key and the random bytes",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "id": {
              "type": "id",
              "value": "mk",
            },
            "type": "setStatement",
            "value": {
              "id": "add",
              "params": [
                {
                  "type": "id",
                  "value": "pmk",
                },
                {
                  "type": "id",
                  "value": "cRB",
                },
                {
                  "type": "id",
                  "value": "sRB",
                },
              ],
              "type": "function",
            },
          },
          "id": {
            "type": "id",
            "value": "Client",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client creates the master-key by concating the pre-master-key and the random bytes",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "id": "hash",
                        "params": [
                          {
                            "type": "id",
                            "value": "cRB",
                          },
                          {
                            "type": "id",
                            "value": "sRB",
                          },
                          {
                            "type": "id",
                            "value": "mk",
                          },
                        ],
                        "type": "function",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "serverPk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Client",
          },
          "rightId": {
            "type": "id",
            "value": "Server",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Client sends hash of random bytes and master-key encrypted by server public key",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "comment": {
              "type": "stmtComment",
              "value": {
                "type": "string",
                "value": "Master-key",
              },
            },
            "type": "newStatement",
            "value": {
              "type": "id",
              "value": "mk",
            },
          },
          "id": {
            "type": "id",
            "value": "Server",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server creates the master-key by concating the pre-master-key and the random bytes",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "id": {
              "type": "id",
              "value": "mk",
            },
            "type": "setStatement",
            "value": {
              "id": "add",
              "params": [
                {
                  "type": "id",
                  "value": "pmk",
                },
                {
                  "type": "id",
                  "value": "cRB",
                },
                {
                  "type": "id",
                  "value": "sRB",
                },
              ],
              "type": "function",
            },
          },
          "id": {
            "type": "id",
            "value": "Server",
          },
          "type": "participantStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server creates the master-key by concating the pre-master-key and the random bytes",
          },
        },
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "id": "hash",
                        "params": [
                          {
                            "type": "id",
                            "value": "cRB",
                          },
                          {
                            "type": "id",
                            "value": "sRB",
                          },
                          {
                            "type": "id",
                            "value": "mk",
                          },
                        ],
                        "type": "function",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "clientPk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Server",
          },
          "rightId": {
            "type": "id",
            "value": "Client",
          },
          "type": "sendStatement",
        },
        "comment": {
          "type": "stmtComment",
          "value": {
            "type": "string",
            "value": "Server sends hash of random bytes and master-key encrypted by client public key",
          },
        },
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse icon-test.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Bob" => "man",
      "B_sk" => "🔑",
      "B_pk" => "🔑",
      "msg_A" => "📝",
    },
    "type": "icons",
  },
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "B_sk",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "B_pk",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_A",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_A",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "B_pk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse key-relation.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": undefined,
  "keyRelations": {
    "keyRelations": [
      {
        "pk": {
          "type": "id",
          "value": "B_pk",
        },
        "sk": {
          "type": "id",
          "value": "B_sk",
        },
        "type": "keyRelation",
      },
    ],
    "type": "keyRelations",
  },
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "B_sk",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "B_pk",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_A",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_A",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "B_pk",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse new_function.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": {
    "functions": [
      {
        "type": "id",
        "value": "hash",
      },
    ],
    "type": "functionsDef",
  },
  "icons": undefined,
  "keyRelations": undefined,
  "knowledge": undefined,
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "comment": undefined,
            "type": "newStatement",
            "value": {
              "id": "hash",
              "params": [
                {
                  "type": "id",
                  "value": "x",
                },
                {
                  "type": "id",
                  "value": "y",
                },
              ],
              "type": "function",
            },
          },
          "id": {
            "type": "id",
            "value": "Alice",
          },
          "type": "participantStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse send.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": undefined,
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_B",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_A",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "msg_A",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "msg_B",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse send-and-clear.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": undefined,
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_B",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_A",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "msg_A",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "msg_B",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "id": {
            "type": "id",
            "value": "msg_A",
          },
          "type": "clearStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "id": {
            "type": "id",
            "value": "msg_B",
          },
          "type": "clearStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse send-encryption-no-decrypt.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": undefined,
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "bkey",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_B",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "akey",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_A",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_A",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "aKey",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_B",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "bKey",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse send-with-enc.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": undefined,
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "key",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_B",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "key",
            },
          },
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_A",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_A",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "key",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_B",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "key",
                  },
                  "type": "encryptExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse send-with-sign.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": undefined,
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_B",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "msg_A",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_A",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "key",
                  },
                  "type": "signExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "inner": [
                    {
                      "child": {
                        "type": "id",
                        "value": "msg_B",
                      },
                      "type": "expression",
                    },
                  ],
                  "outer": {
                    "type": "id",
                    "value": "key",
                  },
                  "type": "signExpression",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse simple.sepo 1`] = `
{
  "equations": {
    "equations": [
      {
        "left": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "a",
            },
            {
              "type": "id",
              "value": "b",
            },
          ],
          "type": "function",
        },
        "right": {
          "id": "add",
          "params": [
            {
              "type": "id",
              "value": "b",
            },
            {
              "type": "id",
              "value": "a",
            },
          ],
          "type": "function",
        },
        "type": "equation",
      },
    ],
    "type": "equations",
  },
  "format": {
    "formats": [
      {
        "format": {
          "type": "Tex",
          "value": "$Hash(x||y)$",
        },
        "id": {
          "id": "hash",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$g^{y}$",
        },
        "id": {
          "id": "exp",
          "params": [
            {
              "type": "id",
              "value": "g",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
      {
        "format": {
          "type": "Tex",
          "value": "$function(x,y,x)$",
        },
        "id": {
          "id": "fun",
          "params": [
            {
              "type": "id",
              "value": "x",
            },
            {
              "type": "id",
              "value": "y",
            },
          ],
          "type": "function",
        },
        "type": "formatItem",
      },
    ],
    "type": "format",
  },
  "functions": {
    "functions": [
      {
        "type": "id",
        "value": "hash",
      },
    ],
    "type": "functionsDef",
  },
  "icons": undefined,
  "keyRelations": {
    "keyRelations": [
      {
        "pk": {
          "type": "id",
          "value": "tpm_pk",
        },
        "sk": {
          "type": "id",
          "value": "tmp_sk",
        },
        "type": "keyRelation",
      },
    ],
    "type": "keyRelations",
  },
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "tpm_sk",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "TPM",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "tpm_pk",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Shared",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Parent",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "TPM",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "tpm_sk",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "TPM",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "id": "hash",
                  "params": [
                    {
                      "type": "id",
                      "value": "x",
                    },
                    {
                      "id": "exp",
                      "params": [
                        {
                          "type": "id",
                          "value": "g",
                        },
                        {
                          "type": "id",
                          "value": "y",
                        },
                      ],
                      "type": "function",
                    },
                  ],
                  "type": "function",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "TPM",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;

exports[`should parse simple_match.sepo 1`] = `
{
  "equations": undefined,
  "format": undefined,
  "functions": undefined,
  "icons": {
    "icons": Map {
      "Alice" => "woman",
      "Bob" => "man",
    },
    "type": "icons",
  },
  "keyRelations": undefined,
  "knowledge": {
    "knowledge": [
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "akey",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "knowledgeItem",
      },
      {
        "children": [
          {
            "comment": undefined,
            "value": {
              "type": "id",
              "value": "bkey",
            },
          },
        ],
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "knowledgeItem",
      },
    ],
    "type": "knowledge",
  },
  "participants": {
    "participants": [
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Alice",
        },
        "type": "participantItem",
      },
      {
        "comment": undefined,
        "id": {
          "type": "id",
          "value": "Bob",
        },
        "type": "participantItem",
      },
    ],
    "type": "participants",
  },
  "protocol": {
    "statements": [
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "akey",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Alice",
          },
          "rightId": {
            "type": "id",
            "value": "Bob",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "cases": [
              {
                "case": {
                  "type": "string",
                  "value": "\\"Refuse\\"",
                },
                "children": [
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "type": "string",
                              "value": "\\"Refused\\"",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "Bob",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "Alice",
                      },
                      "type": "sendStatement",
                    },
                    "comment": undefined,
                    "type": "statement",
                  },
                ],
                "type": "matchCase",
              },
              {
                "case": {
                  "type": "string",
                  "value": "\\"Obtain\\"",
                },
                "children": [
                  {
                    "child": {
                      "child": {
                        "expressions": [
                          {
                            "child": {
                              "type": "string",
                              "value": "\\"Obtained\\"",
                            },
                            "type": "expression",
                          },
                        ],
                        "type": "messageSendStatement",
                      },
                      "leftId": {
                        "type": "id",
                        "value": "Bob",
                      },
                      "rightId": {
                        "type": "id",
                        "value": "Alice",
                      },
                      "type": "sendStatement",
                    },
                    "comment": undefined,
                    "type": "statement",
                  },
                ],
                "type": "matchCase",
              },
            ],
            "type": "matchStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
      {
        "child": {
          "child": {
            "expressions": [
              {
                "child": {
                  "type": "id",
                  "value": "bkey",
                },
                "type": "expression",
              },
            ],
            "type": "messageSendStatement",
          },
          "leftId": {
            "type": "id",
            "value": "Bob",
          },
          "rightId": {
            "type": "id",
            "value": "Alice",
          },
          "type": "sendStatement",
        },
        "comment": undefined,
        "type": "statement",
      },
    ],
    "type": "protocol",
  },
  "type": "program",
}
`;
